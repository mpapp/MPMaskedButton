//
//  MPMaskedButtonRenderer.m
//  MPMaskedButton
//
//  Created by Matias Piipari on 21/12/2014.
//  Copyright (c) 2014-2015 Manuscripts.app Limited. All rights reserved.
//
//  Generated by PaintCode (www.paintcodeapp.com)
//

#import "MPMaskedButtonRenderer.h"


@implementation MPMaskedButtonRenderer

#pragma mark Initialization

+ (void)initialize
{
}

#pragma mark Drawing Methods

+ (void)drawMaskWithFillColor: (NSColor*)fillColor overlayFillColor: (NSColor*)overlayFillColor diameter: (CGFloat)diameter
{
    //// General Declarations
    CGContextRef context = (CGContextRef)NSGraphicsContext.currentContext.graphicsPort;


    //// Variable Declarations
    CGFloat scale = diameter / 64.0;

    //// circularMask Drawing
    [NSGraphicsContext saveGraphicsState];
    CGContextScaleCTM(context, scale, scale);

    NSBezierPath* circularMaskPath = NSBezierPath.bezierPath;
    [circularMaskPath moveToPoint: NSMakePoint(64, 64)];
    [circularMaskPath curveToPoint: NSMakePoint(64, 32) controlPoint1: NSMakePoint(64, 63.95) controlPoint2: NSMakePoint(64, 32)];
    [circularMaskPath lineToPoint: NSMakePoint(64, 0.05)];
    [circularMaskPath lineToPoint: NSMakePoint(0, 0)];
    [circularMaskPath curveToPoint: NSMakePoint(0, 32) controlPoint1: NSMakePoint(0, 0) controlPoint2: NSMakePoint(0, 16)];
    [circularMaskPath curveToPoint: NSMakePoint(0, 64) controlPoint1: NSMakePoint(0, 48) controlPoint2: NSMakePoint(0, 64)];
    [circularMaskPath lineToPoint: NSMakePoint(32, 64)];
    [circularMaskPath curveToPoint: NSMakePoint(0, 32) controlPoint1: NSMakePoint(14.33, 64) controlPoint2: NSMakePoint(0, 49.67)];
    [circularMaskPath curveToPoint: NSMakePoint(12.67, 6.5) controlPoint1: NSMakePoint(0, 21.59) controlPoint2: NSMakePoint(4.97, 12.34)];
    [circularMaskPath curveToPoint: NSMakePoint(32, 0) controlPoint1: NSMakePoint(18.04, 2.42) controlPoint2: NSMakePoint(24.74, 0)];
    [circularMaskPath curveToPoint: NSMakePoint(64, 32) controlPoint1: NSMakePoint(49.67, -0) controlPoint2: NSMakePoint(64, 14.33)];
    [circularMaskPath curveToPoint: NSMakePoint(32, 64) controlPoint1: NSMakePoint(64, 49.67) controlPoint2: NSMakePoint(49.67, 64)];
    [circularMaskPath lineToPoint: NSMakePoint(64, 64)];
    [circularMaskPath lineToPoint: NSMakePoint(64, 64)];
    [circularMaskPath closePath];
    [fillColor setFill];
    [circularMaskPath fill];

    [NSGraphicsContext restoreGraphicsState];


    //// Oval Drawing
    NSBezierPath* ovalPath = [NSBezierPath bezierPathWithOvalInRect: NSMakeRect(0, 0, diameter, diameter)];
    [overlayFillColor setFill];
    [ovalPath fill];
}

+ (void)drawPlusSymbolWithFillColor: (NSColor*)fillColor diameter: (CGFloat)diameter padding: (CGFloat)padding strokeWidth: (CGFloat)strokeWidth rounding: (CGFloat)rounding
{

    //// Variable Declarations
    CGFloat paddedDiameter = diameter - padding * 2;
    CGFloat halfDiameter = diameter / 2.0 - strokeWidth * 0.5;

    //// verticalLine Drawing
    NSBezierPath* verticalLinePath = [NSBezierPath bezierPathWithRoundedRect: NSMakeRect(halfDiameter, padding, strokeWidth, paddedDiameter) xRadius: rounding yRadius: rounding];
    [fillColor setFill];
    [verticalLinePath fill];


    //// horizontalLine Drawing
    NSBezierPath* horizontalLinePath = [NSBezierPath bezierPathWithRoundedRect: NSMakeRect(padding, halfDiameter, paddedDiameter, strokeWidth) xRadius: rounding yRadius: rounding];
    [fillColor setFill];
    [horizontalLinePath fill];
}

+ (void)drawOpenSymbolWithFillColor: (NSColor*)fillColor diameter: (CGFloat)diameter padding: (CGFloat)padding strokeWidth: (CGFloat)strokeWidth rounding: (CGFloat)rounding openness: (CGFloat)openness diameterFraction: (CGFloat)diameterFraction
{
    //// General Declarations
    CGContextRef context = (CGContextRef)NSGraphicsContext.currentContext.graphicsPort;


    //// Variable Declarations
    CGFloat paddedDiameter = diameter - padding * 2;
    CGFloat adjustedPadding = padding;
    CGFloat adjustedDiameter = diameterFraction * diameter - padding;

    //// Lower Line Drawing
    NSBezierPath* lowerLinePath = [NSBezierPath bezierPathWithRoundedRect: NSMakeRect(padding, adjustedDiameter, paddedDiameter, strokeWidth) xRadius: rounding yRadius: rounding];
    [fillColor setFill];
    [lowerLinePath fill];


    //// Upper Line Drawing
    [NSGraphicsContext saveGraphicsState];
    CGContextTranslateCTM(context, (adjustedPadding + 1), adjustedDiameter);
    CGContextRotateCTM(context, -openness * M_PI / 180);

    NSBezierPath* upperLinePath = [NSBezierPath bezierPathWithRoundedRect: NSMakeRect(0, 0, paddedDiameter, strokeWidth) xRadius: rounding yRadius: rounding];
    [fillColor setFill];
    [upperLinePath fill];

    [NSGraphicsContext restoreGraphicsState];
}

+ (void)drawFeedbackButtonWithFillColor:(NSColor *)fillColor
{
    //// Bezier Drawing
    NSBezierPath* bezierPath = NSBezierPath.bezierPath;
    [bezierPath moveToPoint: NSMakePoint(9.76, 20.38)];
    [bezierPath curveToPoint: NSMakePoint(8.94, 21.28) controlPoint1: NSMakePoint(9.76, 20.88) controlPoint2: NSMakePoint(9.4, 21.28)];
    [bezierPath curveToPoint: NSMakePoint(8.13, 20.38) controlPoint1: NSMakePoint(8.49, 21.28) controlPoint2: NSMakePoint(8.13, 20.88)];
    [bezierPath lineToPoint: NSMakePoint(8.13, 16.03)];
    [bezierPath curveToPoint: NSMakePoint(8.94, 15.13) controlPoint1: NSMakePoint(8.13, 15.54) controlPoint2: NSMakePoint(8.49, 15.13)];
    [bezierPath curveToPoint: NSMakePoint(9.76, 16.03) controlPoint1: NSMakePoint(9.4, 15.13) controlPoint2: NSMakePoint(9.76, 15.54)];
    [bezierPath lineToPoint: NSMakePoint(9.76, 20.38)];
    [bezierPath lineToPoint: NSMakePoint(9.76, 20.38)];
    [bezierPath closePath];
    [bezierPath moveToPoint: NSMakePoint(13.88, 12.91)];
    [bezierPath lineToPoint: NSMakePoint(10.34, 12.91)];
    [bezierPath curveToPoint: NSMakePoint(7.54, 16.04) controlPoint1: NSMakePoint(10.34, 12.91) controlPoint2: NSMakePoint(7.54, 13.04)];
    [bezierPath lineToPoint: NSMakePoint(7.54, 20.17)];
    [bezierPath curveToPoint: NSMakePoint(10.22, 23.63) controlPoint1: NSMakePoint(7.54, 20.17) controlPoint2: NSMakePoint(7.48, 23.63)];
    [bezierPath curveToPoint: NSMakePoint(11.2, 25.57) controlPoint1: NSMakePoint(10.22, 23.63) controlPoint2: NSMakePoint(11.2, 24.3)];
    [bezierPath lineToPoint: NSMakePoint(11.2, 33.03)];
    [bezierPath curveToPoint: NSMakePoint(12.11, 34.23) controlPoint1: NSMakePoint(11.2, 33.03) controlPoint2: NSMakePoint(11.02, 34.23)];
    [bezierPath curveToPoint: NSMakePoint(13.7, 31.19) controlPoint1: NSMakePoint(12.11, 34.23) controlPoint2: NSMakePoint(15.27, 34.78)];
    [bezierPath curveToPoint: NSMakePoint(13.84, 28.45) controlPoint1: NSMakePoint(14.89, 29.84) controlPoint2: NSMakePoint(13.84, 28.45)];
    [bezierPath curveToPoint: NSMakePoint(13.88, 25.77) controlPoint1: NSMakePoint(13.84, 28.45) controlPoint2: NSMakePoint(14.9, 27.32)];
    [bezierPath curveToPoint: NSMakePoint(14.79, 23.57) controlPoint1: NSMakePoint(13.88, 25.77) controlPoint2: NSMakePoint(14.79, 24.37)];
    [bezierPath lineToPoint: NSMakePoint(14.85, 14.04)];
    [bezierPath curveToPoint: NSMakePoint(13.88, 12.91) controlPoint1: NSMakePoint(14.85, 14.04) controlPoint2: NSMakePoint(15.02, 12.91)];
    [bezierPath lineToPoint: NSMakePoint(13.88, 12.91)];
    [bezierPath closePath];
    [bezierPath setWindingRule: NSEvenOddWindingRule];
    [fillColor setFill];
    [bezierPath fill];
    
    
    //// Bezier 2 Drawing
    NSBezierPath* bezier2Path = NSBezierPath.bezierPath;
    [bezier2Path moveToPoint: NSMakePoint(30.09, 14.86)];
    [bezier2Path lineToPoint: NSMakePoint(30.09, 6.15)];
    [bezier2Path curveToPoint: NSMakePoint(29.22, 6.28) controlPoint1: NSMakePoint(30.09, 5.01) controlPoint2: NSMakePoint(29.22, 6.28)];
    [bezier2Path curveToPoint: NSMakePoint(16.6, 12.8) controlPoint1: NSMakePoint(25.1, 13.36) controlPoint2: NSMakePoint(16.6, 12.8)];
    [bezier2Path curveToPoint: NSMakePoint(15.76, 13.75) controlPoint1: NSMakePoint(15.6, 12.8) controlPoint2: NSMakePoint(15.76, 13.75)];
    [bezier2Path lineToPoint: NSMakePoint(15.76, 21.97)];
    [bezier2Path curveToPoint: NSMakePoint(16.66, 22.92) controlPoint1: NSMakePoint(15.76, 22.92) controlPoint2: NSMakePoint(16.66, 22.92)];
    [bezier2Path curveToPoint: NSMakePoint(29.39, 29.58) controlPoint1: NSMakePoint(26.16, 22.92) controlPoint2: NSMakePoint(29.39, 29.58)];
    [bezier2Path curveToPoint: NSMakePoint(30.09, 29.53) controlPoint1: NSMakePoint(29.39, 29.58) controlPoint2: NSMakePoint(30.14, 30.61)];
    [bezier2Path lineToPoint: NSMakePoint(30.09, 20.84)];
    [bezier2Path curveToPoint: NSMakePoint(31.71, 17.85) controlPoint1: NSMakePoint(31.05, 20.27) controlPoint2: NSMakePoint(31.71, 19.15)];
    [bezier2Path curveToPoint: NSMakePoint(30.09, 14.86) controlPoint1: NSMakePoint(31.71, 16.55) controlPoint2: NSMakePoint(31.05, 15.43)];
    [bezier2Path lineToPoint: NSMakePoint(30.09, 14.86)];
    [bezier2Path closePath];
    [bezier2Path setWindingRule: NSEvenOddWindingRule];
    [fillColor setFill];
    [bezier2Path fill];

}

@end

